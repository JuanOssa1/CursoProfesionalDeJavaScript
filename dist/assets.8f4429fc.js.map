{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","constructor","config","media","el","plugins","_initPlugins","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","toggleMute","AutoPlay","prototype","AutoPause","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","console","log","visibilityState","video","querySelector","buttonMute","getElementById","buttonPlay","onclick","navigator","serviceWorker","register","catch","error","message"],"mappings":"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","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["/*Mi version\nconst video = document.querySelector(\"video\")//Esto selecciona lo que va a manipular en este caso\n      //es el video\nconst button = document.querySelector(\"button\")\nvar reproduciendo = true;\nbutton.onclick = () => controlVideo();\n\n\n\n\nfunction controlVideo(){\n    reproduciendo ? video.play() : video.pause();\n}\nvideo.onpause = () =>{/*Mira si el video esta pausado\n    reproduciendo = true;\n}\nvideo.onplaying = () =>{\n    reproduciendo = false;\n}\nexport default MediaPlayer;\n*/\nclass MediaPlayer {\n  constructor(config) {\n    this.media = config.el;\n    this.plugins = config.plugins || [];\n\n    this._initPlugins();\n  }\n  _initPlugins() {\n    const player = {\n      play: () => this.play(),\n      pause: () => this.pause(),\n      /*Esto lo colocamos porque este es el que nos va a dar acceso a la clase\n      principal que es media player ya que dentro del metodo muted quiero acceder\n      a esta*/\n      media: this.media,\n      /*se pone get seguido de muted que es la propiedad virtual*/\n      get muted(){\n        return this.media.muted;\n      },\n      set muted(value){\n        /*\n        if(value===true){\n          this.media.muted=true;\n        } else {\n          this.media.muted=false;\n        }\n        O la otra forma simple\n        */\n       this.media.muted = value;\n      }\n    }\n    /*Si yo ahora mando player en vez del this que estoda la clase\n    no todas las funciones van a tener acceso lo cual en parte es bueno porque \n    asi puedo controlar que metodos pueden acceder a que */\n    this.plugins.forEach((plugin) => {\n      plugin.run(player);\n    });\n  }\n  play() {\n    this.media.play();\n  }\n  pause() {\n    this.media.pause();\n  }\n  togglePlay() {\n    this.media.paused ? this.play() : this.pause();\n  }\n  /*\n  mute() {\n    console.log(\"CALLAME PUES\");\n    this.media.muted = true;\n  }\n  unmute() {\n    this.media.muted = false;\n    console.log(\"ABRIME LA BOCA\");\n  }\n  */\n  toggleMute() {\n    this.media.muted = !this.media.muted;\n    /**\n     * Ahi lo que hace es asignar el valor distinto\n     * al presente y ya\n     */\n    /*\n    if ((this.media.muted === false)) {\n        mute(); \n    } else{\n        unmute();\n    }\n    */\n    //this.media.muted ? this.mute() : this.unmute();\n  }\n  \n}\nexport default MediaPlayer;\n","\nfunction AutoPlay(){}\n\nAutoPlay.prototype.run  = function(player){\n    if(!player.muted){\n        /*Aqui lo que estoy haciendo es un setter y le estoy diciendo\n        que si no esta muteado setee la propiedad a mute*/\n        /*player.muted(true); uno se veria tentado a hacerlo asi pero\n        no esta bien porque aunque parezcan una funcion en realidad son\n        un atributo*/\n        player.muted = true;\n    }\n    player.play();\n}\nexport default AutoPlay; ","class AutoPause {\n    constructor(){\n        this.threshold = 0.25;\n        /**Como vimos en clases anteriores ahora el bind va a hacer esta vaina\n         * general porque si la meto dentro del intersection observer no puedo acceder \n         * a ella en otros metodos porque seria undefined\n         */\n        this.handleIntersection = this.handleIntersection.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n    run(player){\n        this.player = player;/*Recordar que esto se hace para ya pueda acceder a ella desde adentro mas abajo*/\n        const observer = new IntersectionObserver(this.handleIntersection, {threshold: this.threshold })/**Recibe dos argumentos\n        el handler que recibe el anuncio de lo sucedido y el objeto de configuracion\n        es como el parametro que definimos como alerta en este caso como es lo que se ve del contenedor\n        queremos que este mirando la pantalla y cugit ando esta llegue a solo un 25% nos avise \n        threshold significa limite en ingles ocurre cada cada que pase por ese limite*/\n        observer.observe(this.player.media); /**Aqui defino que quiero que se observe que es rttda la pantalla*/\n\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\n    }\n    handleIntersection(entries){ /**Le pasa una lista de todos los objetos que estamos observando y como \n    en este caso solo hay uno pues... */\n        const entry = entries[0];\n        /**intersection ratio es un  atributo que ya tiene entry aqui\n         * ademas estoy diciendo que esta visible es decir si esta intesrcetion es mayor\n         * al limite que he puesto es porque se puede ver todavia lo suficiente\n         */\n        const isVisible = entry.intersectionRatio >= this.threshold;\n        isVisible ? this.player.play():this.player.pause();\n        console.log(entry);\n    }\n    handleVisibilityChange(){\n        const isVisible = document.visibilityState === \"visible\"\n        isVisible ? this.player.play():this.player.pause();\n    }\n}\nexport default AutoPause;","/*\nimport MediaPlayer from './MediaPlayer';\nconst video = document.querySelector(\"video\");//Esto selecciona lo que va a manipular en este caso\n      //es el video\nconst button = document.querySelector(\"button\");\nvar reproduciendo = true;\n\nbutton.onclick = () => controlVideo();\n*/\nimport MediaPlayer from './MediaPlayer.js';\nimport AutoPlay from './plugins/AutoPlay.js';\nimport AutoPause from './plugins/AutoPause.js';\n\nconst video = document.querySelector('video');\nconst player = new MediaPlayer({ el: video, plugins: [new AutoPlay(), new AutoPause()] });\n/**Aqui se observa */\n\nconst buttonMute = document.getElementById('muteunmute');\n\nconst buttonPlay = document.getElementById('pauseplay');\n\nbuttonPlay.onclick = () => player.togglePlay();\nbuttonMute.onclick = () => player.toggleMute();\n\n/**Esto sirve para verificar si el navegador tiene esta utilidad ya que no\n * todos los bnavegadores la tienen debido a que todavia es muy nueva\n */\nif('serviceWorker' in navigator){\n      navigator.serviceWorker.register('/sw.js').catch(error => {\n            console.log(error.message);\n      });\n\n}\n"]}